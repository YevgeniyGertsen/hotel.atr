// <auto-generated />
using System;
using Hotel.ATR.EF.BLL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hotel.ATR.EF.BLL.Migrations
{
    [DbContext(typeof(HotelAtrDbContext))]
    partial class HotelAtrDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Hotel.ATR.EF.BLL.Model.Availabilty", b =>
                {
                    b.Property<int>("AvailabilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AvailabilityId"), 1L, 1);

                    b.Property<DateTime>("ReservationEnd")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ReservationStart")
                        .HasColumnType("datetime");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("AvailabilityId");

                    b.ToTable("Availabilty", (string)null);
                });

            modelBuilder.Entity("Hotel.ATR.EF.BLL.Model.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"), 1L, 1);

                    b.Property<string>("Author")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContentEvent")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("EventCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExparyDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Size")
                        .HasColumnType("int");

                    b.HasKey("EventId");

                    b.HasIndex("EventCategoryId");

                    b.ToTable("Event", (string)null);
                });

            modelBuilder.Entity("Hotel.ATR.EF.BLL.Model.EventCategory", b =>
                {
                    b.Property<int>("EventCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventCategoryId"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("EventCategoryId");

                    b.ToTable("EventCategory", (string)null);
                });

            modelBuilder.Entity("Hotel.ATR.EF.BLL.Model.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationId"), 1L, 1);

                    b.Property<string>("Adres")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ExparyDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("Views")
                        .HasColumnType("int");

                    b.HasKey("LocationId");

                    b.ToTable("Location", (string)null);
                });

            modelBuilder.Entity("Hotel.ATR.EF.BLL.Model.Picture", b =>
                {
                    b.Property<int>("PictureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PictureId"), 1L, 1);

                    b.Property<bool>("MainPicture")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("UrlPicture")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("PictureId");

                    b.HasIndex("RoomId");

                    b.ToTable("Picture", (string)null);
                });

            modelBuilder.Entity("Hotel.ATR.EF.BLL.Model.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,0)");

                    b.Property<Guid>("RoomGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("RoomId");

                    b.ToTable("Room", (string)null);
                });

            modelBuilder.Entity("Hotel.ATR.EF.BLL.Model.RoomProperty", b =>
                {
                    b.Property<int>("RoomPropertiesId")
                        .HasColumnType("int");

                    b.Property<string>("NamePropery")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("ValuePropery")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("RoomPropertiesId");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomProperties");
                });

            modelBuilder.Entity("Hotel.ATR.EF.BLL.Model.Event", b =>
                {
                    b.HasOne("Hotel.ATR.EF.BLL.Model.EventCategory", "EventCategory")
                        .WithMany("Events")
                        .HasForeignKey("EventCategoryId")
                        .HasConstraintName("FK_Event_EventCategory");

                    b.Navigation("EventCategory");
                });

            modelBuilder.Entity("Hotel.ATR.EF.BLL.Model.Picture", b =>
                {
                    b.HasOne("Hotel.ATR.EF.BLL.Model.Room", "Room")
                        .WithMany("Pictures")
                        .HasForeignKey("RoomId")
                        .IsRequired()
                        .HasConstraintName("FK_Picture_Room");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Hotel.ATR.EF.BLL.Model.RoomProperty", b =>
                {
                    b.HasOne("Hotel.ATR.EF.BLL.Model.Room", null)
                        .WithMany("RoomProperties")
                        .HasForeignKey("RoomId");
                });

            modelBuilder.Entity("Hotel.ATR.EF.BLL.Model.EventCategory", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("Hotel.ATR.EF.BLL.Model.Room", b =>
                {
                    b.Navigation("Pictures");

                    b.Navigation("RoomProperties");
                });
#pragma warning restore 612, 618
        }
    }
}
